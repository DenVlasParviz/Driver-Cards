{"ast":null,"code":"import register from '@/services/authentication';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      error: ''\n    };\n  },\n  methods: {\n    async onRegister() {\n      try {\n        const response = await register({\n          email: this.email,\n          password: this.password\n        });\n      } catch (err) {\n        this.error = err.response.data.message;\n      }\n    }\n  }\n};","map":{"version":3,"names":["register","data","email","password","error","methods","onRegister","response","err","message"],"sources":["src/components/authentication/SignUpPage.vue"],"sourcesContent":["<script>\r\nimport register from '@/services/authentication'\r\nexport default {\r\n  data(){\r\n    return {\r\n      email:'',\r\n      password:'',\r\n      error:''\r\n    }\r\n  },\r\n  methods:{\r\n    async onRegister(){\r\n      try{\r\n        const response = await register({email:this.email,password:this.password})\r\n      }\r\n      catch (err){\r\n        this.error=err.response.data.message\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n<b-container>\r\n    <b-row class=\"justify-content-center\">\r\n      <b-col cols=\"12\" md=\"6\">\r\n\r\n     <b-form-group label=\"Email\" label-for=\"email\">\r\n       <b-form-input id=\"email\" type=\"email\" required v-model=\"email\"></b-form-input>\r\n     </b-form-group>\r\n      <b-form-group label=\"Password\" label-for=\"password\">\r\n        <b-form-input id=\"password\" type=\"password\" required v-model=\"password\"></b-form-input>\r\n      </b-form-group>\r\n        <b-button variant=\"primary\">Sign Up</b-button>\r\n      </b-col>\r\n    </b-row>\r\n</b-container>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AACA,OAAAA,QAAA;AACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,QAAA,SAAAP,QAAA;UAAAE,KAAA,OAAAA,KAAA;UAAAC,QAAA,OAAAA;QAAA;MACA,EACA,OAAAK,GAAA;QACA,KAAAJ,KAAA,GAAAI,GAAA,CAAAD,QAAA,CAAAN,IAAA,CAAAQ,OAAA;MACA;IACA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}